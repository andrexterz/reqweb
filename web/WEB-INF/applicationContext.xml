<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
       
    <context:component-scan base-package="br.ufg.reqweb.components, br.ufg.reqweb.dao" />
    <!-- mvc not used with jsf -->
    <!-- mvc:annotation-driven /-->
    <!-- JSR-303 validator -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
    <util:properties id="reqwebSettings" location="classpath:reqweb.properties" />
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".xhtml" />
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="#{reqwebSettings.databaseString}" />
        <property name="username" value="#{reqwebSettings.databaseUser}" />
        <property name="password" value="#{reqwebSettings.databasePassword}" />
    </bean> 

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">        
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="br.ufg.reqweb.model" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop> 
                <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>
   
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="txManager" />
    
    <!-- spring security configuration -->
    <!-- apenas verifica se usuario foi autenticado. ignora roles -->
    
    <security:ldap-server id="ldapSource" url="#{reqwebSettings.url}" /> 

    <security:authentication-manager id="authManager">
        <security:ldap-authentication-provider user-search-filter="(uid={0})" />
    </security:authentication-manager>

    <security:http authentication-manager-ref="authManager" auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/views/secure/**" access="isAuthenticated()" />
    </security:http>
    
</beans>